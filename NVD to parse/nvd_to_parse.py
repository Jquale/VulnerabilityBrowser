#This script will take take the xml files and put them into parse tables

from parse_rest.connection import register
from parse_rest.datatypes import Object
import xml.etree.ElementTree as ET
import time

register("ijsj87dfpY9eK4W0GYyG2AJoHgK0L9YNRSddQIRe", "ovtczU8IPZqcouU55koZiIiRNBCX1lta0WXwhLtI", master_key="mXaN13KizliZH3gTEvuIiPoa4OiEduYXUn2Rnvdn")

try:
	
	t0 = time.time()
	#Creating an object to pass to parse
	class nvd2008(Object):
		pass
	
	#Getting the xml data
	tree = ET.parse('nvdcve-2008.xml') #change here
	root = tree.getroot()
	i = 0;
	for child in root:
		if 'CVSS_score' in child.attrib:
			xml_score = child.attrib['CVSS_score']
			xml_vuln_name = child.attrib['name']
			xml_publish_date = child.attrib['published']
			xml_summary = root[i][0][0].text
			#create the object
			vuln = nvd2008(score = xml_score, name = xml_vuln_name, date = xml_publish_date, summary = xml_summary, countFilter = i)
			#modify for when the program crashes
			if i>0:
				vuln.save()
			i += 1
			#sleep timer to lower the amount of requests per second
			time.sleep(1/15)

	t1 = time.time()
	print t1-t0
except:
	print '2003 failed'
	#sleep on failure
	time.sleep(1200)

print 'done'

